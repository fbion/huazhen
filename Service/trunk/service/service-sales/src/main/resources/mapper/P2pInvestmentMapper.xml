<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzfh.service.sales.mapper.P2pInvestmentMapper">
	<resultMap type="com.hzfh.api.sales.model.P2pInvestment" id="resultMapP2pInvestment">
		<result property="id" column="id"/>
		<result property="p2pCustomerNo" column="p2pCustomer_no"/>
		<result property="p2pProductNo" column="p2pProduct_no"/>
		<result property="productNo" column="Product_no"/>
		<result property="name" column="name"/>
		<result property="income" column="income"/>
		<result property="floatingIncome" column="floating_income"/>
		<result property="totalAmout" column="total_amout"/>
		<result property="paymentTime" column="payment_time"/>
		<result property="paymentType" column="payment_type"/>
		<result property="status" column="status"/>
		<result property="isTest" column="is_test"/>
		<result property="inUserNo" column="in_user_no"/>
		<result property="inTime" column="in_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="editUserNo" column="edit_user_no"/>
		<result property="editTime" column="edit_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp"/>
		<result property="editComment" column="edit_comment"/>
		<result property="empNo" column="emp_no"/>
		<result property="salesNo" column="sales_no"/>
	</resultMap>
	<select id="getList" resultMap="resultMapP2pInvestment">
		SELECT id,p2pCustomer_no,p2pProduct_no,Product_no,name,income,floating_income,total_amout,payment_time,payment_type,status,is_test,in_user_no,in_time,edit_user_no,edit_time,edit_comment,emp_no,sales_no
		FROM p2p_investment
	</select>
	<select id="getPagingList" resultMap="resultMapP2pInvestment" parameterType="com.hzfh.api.sales.model.query.P2pInvestmentCondition" statementType="STATEMENT">
		SELECT id,p2pCustomer_no,p2pProduct_no,Product_no,name,income,floating_income,total_amout,payment_time,payment_type,status,is_test,in_user_no,in_time,edit_user_no,edit_time,edit_comment,emp_no,sales_no FROM p2p_investment where 1=1

		<if test="p2pCustomerNo !=0">and p2pCustomer_no = ${p2pCustomerNo}</if>
		ORDER BY
		<foreach item="item" collection="sortItemList" separator=",">
			${item.sortFeild} ${item.sortType}
		</foreach>
		LIMIT ${startIndex},${pageSize}
	</select>
	<select id="getTotalCount" resultType="int" parameterType="com.hzfh.api.sales.model.query.P2pInvestmentCondition" statementType="STATEMENT">
		SELECT count(1) FROM p2p_investment where 1=1
		<if test="p2pCustomerNo !=0">and p2pCustomer_no = ${p2pCustomerNo}</if>
	</select>
	<select id="getInfo" resultMap="resultMapP2pInvestment" parameterType="int">
		SELECT id,p2pCustomer_no,p2pProduct_no,Product_no,name,income,floating_income,total_amout,payment_time,payment_type,status,is_test,in_user_no,in_time,edit_user_no,edit_time,edit_comment,emp_no,sales_no FROM p2p_investment where id=#{id}
	</select>
	<insert id="add" parameterType="com.hzfh.api.sales.model.P2pInvestment" useGeneratedKeys="true" keyProperty="id">
		insert into p2p_investment
		(p2pCustomer_no,p2pProduct_no,Product_no,name,income,floating_income,total_amout,payment_time,payment_type,status,is_test,in_user_no,in_time,edit_user_no,edit_time,edit_comment,emp_no,sales_no)
		values
		(#{p2pCustomerNo},#{p2pProductNo},#{productNo},#{name},#{income},#{floatingIncome},#{totalAmout},#{paymentTime},#{paymentType},#{status},#{isTest},#{inUserNo},current_timestamp(),#{editUserNo},current_timestamp(),#{editComment},#{empNo},#{salesNo})
	</insert>
	<update id="update" parameterType="com.hzfh.api.sales.model.P2pInvestment">
		update p2p_investment set 
		p2pCustomer_no=#{p2pCustomerNo},p2pProduct_no=#{p2pProductNo},Product_no=#{productNo},name=#{name},income=#{income},floating_income=#{floatingIncome},total_amout=#{totalAmout},payment_time=#{paymentTime},payment_type=#{paymentType},status=#{status},is_test=#{isTest},edit_user_no=#{editUserNo},edit_time=current_timestamp(),edit_comment=#{editComment},emp_no=#{empNo},sales_no=#{salesNo}
		where id=#{id}
	</update>
	<delete id="delete" parameterType="int">
		delete from p2p_investment where id = #{id}
	</delete>
	<select id="getP2pInvestmentBySalesId" resultMap="resultMapP2pInvestment" parameterType="int">
		SELECT id,p2pCustomer_no,p2pProduct_no,Product_no,name,income,floating_income,total_amout,payment_time,payment_type,status,is_test,in_user_no,in_time,edit_user_no,edit_time,edit_comment,emp_no,sales_no FROM p2p_investment where sales_no=#{salesNo}
	</select>

    <update id="updateStatusBySalesNo">
        update p2p_investment set
        status=#{status}
        where sales_no=#{salesNo}
    </update>
    <update id="updateStatusByProductNoAndStatus">
        update p2p_investment set
        status=3
        where Product_no=#{productNo} and status=#{status}
    </update>
    
    
    <select id="getListByP2pCustomerNo" resultMap="resultMapP2pInvestment">
		SELECT id,p2pCustomer_no,p2pProduct_no,Product_no,name,income,floating_income,total_amout,payment_time,payment_type,status,is_test,in_user_no,in_time,edit_user_no,edit_time,edit_comment,emp_no,sales_no
		FROM p2p_investment where p2pCustomer_no = #{customerNo}
	</select>
</mapper>
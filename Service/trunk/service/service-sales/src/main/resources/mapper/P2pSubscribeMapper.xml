<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzfh.service.sales.mapper.P2pSubscribeMapper">
	<resultMap type="com.hzfh.api.sales.model.P2pSubscribe" id="resultMapP2pSubscribe">
		<result property="id" column="id" />
		<result property="p2pCustomer" column="p2p_customer" />
		<result property="realName" column="real_name" />
		<result property="cellphone" column="cellphone" />
		<result property="provinceNo" column="province_no" />
		<result property="cityNo" column="city_no" />
		<result property="districtNo" column="district_no" />
		<result property="address" column="address" />
		<result property="deptNo" column="dept_no" />
		<result property="cardType" column="card_type" />
		<result property="cardNumber" column="card_number" />
		<result property="amount" column="amount" />
		<result property="empNo" column="emp_no" />
		<result property="status" column="status" />
		<result property="visitTime" column="visit_time" jdbcType="TIMESTAMP" javaType="java.sql.Timestamp" />
		<result property="result" column="result" />
		<result property="p2pProductNo" column="p2p_product_no" />
		<result property="customerNo" column="customer_no" />
		<result property="isTest" column="is_test" />
	</resultMap>
	<select id="getList" resultMap="resultMapP2pSubscribe">
		SELECT
		id,p2p_customer,real_name,cellphone,province_no,city_no,district_no,address,dept_no,card_type,card_number,amount,emp_no,status,visit_time,result,is_test,p2p_product_no,customer_no
		FROM p2p_subscribe
	</select>
	<select id="getPagingList" resultMap="resultMapP2pSubscribe" parameterType="com.hzfh.api.sales.model.query.P2pSubscribeCondition" statementType="STATEMENT">
		SELECT
		id,p2p_customer,real_name,cellphone,province_no,city_no,district_no,address,dept_no,card_type,card_number,amount,emp_no,status,visit_time,result,is_test,p2p_product_no,customer_no
		FROM p2p_subscribe where 1=1
		<if test="workMateString !=null">and emp_no in (${workMateString})	</if>
		<if test="visitTime !=null">and to_days(visit_time) - to_days('${visitTime}') &lt; 1 and to_days(visit_time) - to_days('${visitTime}') &gt;=0	</if>
		<if test="byP2pCustomerNo != 0">and p2p_customer = ${byP2pCustomerNo}</if>
		<if test="byStatus != 0">and status = ${byStatus}</if>
		<if test="byEmpNo != 0">and emp_no = ${byEmpNo}</if>
		<if test="byDeptNo != 0">and dept_no =${byDeptNo}</if>
		<if test="customerName != null and customerName != '' ">and real_name LIKE CONCAT('%','${customerName}','%')</if>
		<if test="phone != null and phone != '' ">and cellphone LIKE CONCAT('%','${phone}','%')</if>
		<if test="byP2pProductNo != 0">and p2p_product_no =${byP2pProductNo}</if>
		<if test="customerNo != 0">and p2p_customer=${customerNo}</if>
		<if test="status != 0">and status=${status}</if>
		<if test="isTest>-1">and is_test=${isTest}</if>
		order by
		<foreach item="item" collection="sortItemList" separator=",">
			${item.sortFeild} ${item.sortType}
		</foreach>
		LIMIT ${startIndex},${pageSize}
	</select>
	<select id="getTotalCount" resultType="int"
		parameterType="com.hzfh.api.sales.model.query.P2pSubscribeCondition"
		statementType="STATEMENT">
		SELECT count(1) FROM p2p_subscribe where 1=1
		<if test="workMateString !=null">and emp_no in (${workMateString})	</if>
		<if test="visitTime !=null">and to_days(visit_time) - to_days('${visitTime}') &lt; 1 and to_days(visit_time) - to_days('${visitTime}') &gt;=0	</if>
		<if test="byP2pCustomerNo != 0">and p2p_customer = ${byP2pCustomerNo}</if>
		<if test="byStatus != 0">and status = ${byStatus}</if>
		<if test="byEmpNo != 0">and emp_no = ${byEmpNo}</if>
		<if test="byDeptNo != 0">and dept_no =${byDeptNo}</if>
		<if test="customerName != null and customerName != '' ">and real_name LIKE CONCAT('%','${customerName}','%')</if>
		<if test="phone != null and phone != '' ">and cellphone LIKE CONCAT('%','${phone}','%')</if>
		<if test="byP2pProductNo != 0">and p2p_product_no =${byP2pProductNo}</if>
		<if test="customerNo != 0">and p2p_customer=${customerNo}</if>
		<if test="status != 0">and status=${status}</if>
		<if test="isTest>-1">and is_test=${isTest}</if>
	</select>
	<select id="getInfo" resultMap="resultMapP2pSubscribe"
		parameterType="int">
		SELECT
		id,p2p_customer,real_name,cellphone,province_no,city_no,district_no,address,dept_no,card_type,card_number,amount,emp_no,status,visit_time,result,is_test,p2p_product_no,customer_no
		FROM p2p_subscribe where id=#{id}
	</select>
	<insert id="add" parameterType="com.hzfh.api.sales.model.P2pSubscribe"
		useGeneratedKeys="true" keyProperty="id">
		insert into p2p_subscribe
		(p2p_customer,real_name,cellphone,province_no,city_no,district_no,address,dept_no,card_type,card_number,amount,emp_no,status,visit_time,result,is_test,p2p_product_no,customer_no)
		values
		(#{p2pCustomer},#{realName},#{cellphone},#{provinceNo},#{cityNo},#{districtNo},#{address},#{deptNo},#{cardType},#{cardNumber},#{amount},#{empNo},#{status},#{visitTime},#{result},#{isTest},#{p2pProductNo},#{customerNo})
	</insert>
	<update id="update" parameterType="com.hzfh.api.sales.model.P2pSubscribe">
		update p2p_subscribe set
		p2p_customer=#{p2pCustomer},real_name=#{realName},cellphone=#{cellphone},province_no=#{provinceNo},city_no=#{cityNo},district_no=#{districtNo},address=#{address},dept_no=#{deptNo},card_type=#{cardType},card_number=#{cardNumber},amount=#{amount},emp_no=#{empNo},status=#{status},visit_time=#{visitTime},result=#{result},is_test=#{isTest},p2p_product_no=#{p2pProductNo},customer_no=#{customerNo}
		where id=#{id}
	</update>
	<update id="updateEmpNoById" parameterType="int">
		update p2p_subscribe
		set
		dept_no=#{deptNo},emp_no=#{empNo}
		where id=#{id}
	</update>
	<update id="updateVisitTimeAndVisitTimeAndStatus">
		update
		p2p_subscribe set
		status=#{status},visit_time=#{visitTime},result=#{result}
		where
		id=#{id}
	</update>

    <update id="updateP2pSubScribeStatus">
        update
        p2p_subscribe set
        status = #{status}
        where
        id=#{id}
    </update>
	<delete id="delete" parameterType="int">
		delete from p2p_subscribe
		where id = #{id}
	</delete>
    <update id="updateP2pSubscribeById">
        update
        p2p_subscribe set
        customer_no = #{customerNo}
        where
        id=#{id}
    </update>
    <update id="updateP2pSubscribeByP2pCustomerNo">
        update p2p_subscribe
        set customer_no = #{customerNo}
        where
        p2p_customer=#{p2pCustomerNo}
    </update>
    <update id="updateEmpNoByP2pCustomerNo">
        update p2p_subscribe
        set
        dept_no=#{deptNo},emp_no=#{userNo}
        where p2p_customer=#{p2pCustomerNo} and emp_no=0
    </update>
    <select id="getListByP2pCustomerNo" resultMap="resultMapP2pSubscribe">
		SELECT
		id,p2p_customer,real_name,cellphone,province_no,city_no,district_no,address,dept_no,card_type,card_number,amount,emp_no,status,visit_time,result,is_test,p2p_product_no,customer_no
		FROM p2p_subscribe where p2p_customer = #{customerNo}
	</select>
</mapper>